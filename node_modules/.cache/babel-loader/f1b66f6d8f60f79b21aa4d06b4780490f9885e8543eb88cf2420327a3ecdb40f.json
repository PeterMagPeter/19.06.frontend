{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import styles from\"./GamePrototype.module.css\";import{Container,Button,Image}from\"react-bootstrap\";import{Responsive,WidthProvider}from\"react-grid-layout\";import{useDispatch}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import\"react-grid-layout/css/styles.css\";import\"react-resizable/css/styles.css\";import{setShips,setAiDifficulty}from\"../../reducer/TestReducer\";import smallShip from\"../../../assets/pictures/Schiffe/StandardPNG/holes/2.png\";import mediumShip from\"../../../assets/pictures/Schiffe/StandardPNG/holes/3.png\";import largeShip from\"../../../assets/pictures/Schiffe/StandardPNG/holes/4.png\";import xlargeShip from\"../../../assets/pictures/Schiffe/StandardPNG/holes/5.png\";import smallShipR from\"../../../assets/pictures/Schiffe/StandardPNG/holes/2r.png\";import mediumShipR from\"../../../assets/pictures/Schiffe/StandardPNG/holes/3r.png\";import largeShipR from\"../../../assets/pictures/Schiffe/StandardPNG/holes/4r.png\";import xlargeShipR from\"../../../assets/pictures/Schiffe/StandardPNG/holes/5r.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResponsiveGridLayout=WidthProvider(Responsive);// instant place button -> search for \"Debug Ships Button\" and make it to real code\nconst space=0;const kiDifficulties=[0.25,-1,0.9];export default function GamePrototype2(){const dispatch=useDispatch();const navigate=useNavigate();const[kiMode,setKiMode]=useState(\"ki1\");let difficulty=useRef(0.5);// GameGrid\nconst maxRows=10;const maxCols=10;const gridCells=100;const[layout,setLayout]=useState(Array.from({length:gridCells},(_,index)=>({i:index.toString(),// identifier\nx:index%maxRows,//startX\ny:Math.floor(index/maxCols),//startY\nw:1,h:1,static:true,id:\"\"})));// Ships\nconst maxS=2;const maxM=2;const maxL=1;const maxXL=1;const[draggedItem,setDraggedItem]=useState();const smallShipSize=\"2:1:s\";const mediumShipSize=\"3:1:m\";const largeShipSize=\"4:1:l\";const xlShipSize=\"5:1:xl\";const shipIds=useRef({s:0,m:0,l:0,xl:0});// ChatGPT\nconst shipSizes=[{w:2,h:1,id:\"s\"},// small ships\n{w:2,h:1,id:\"s\"},{w:3,h:1,id:\"m\"},// medium ships\n{w:3,h:1,id:\"m\"},{w:4,h:1,id:\"l\"},// large ship\n{w:5,h:1,id:\"xl\"}// extra-large ship\n];// --------\n// 2 zweier, 2 dreier, 1 vierer, 1 fünfer\nconst[items,setItems]=useState([]);const[delItems,setDelItems]=useState([]);const layouts={lg:layout.concat(items)};const rotateAdd=()=>{let newX=delItems[0].x;let newY=delItems[0].y;let newH=delItems[0].w;let newW=delItems[0].h;let newShip={i:delItems[0].i,x:newX+newW>maxCols?maxCols-newW:newX,y:newY+newH>maxRows?maxRows-newH:newY,w:newW,h:newH,static:false,id:\"\"};newShip=findNonOverlappingPosition(newShip,items);// Fügen Sie das Schiff zum items-Array hinzu\nsetItems([...items,newShip]);setDelItems([]);};const rotateRemove=id=>{// Finde das zweite Item im Array\nconst secondItemIndex=items.findIndex((item,index)=>id===item.i);setDelItems([items[secondItemIndex]]);if(secondItemIndex!==-1){// Entferne das Item aus dem items-Array\nconst updatedItems=[...items];updatedItems.splice(secondItemIndex,1);// Aktualisiere den Zustand mit dem aktualisierten Array\nsetItems(updatedItems);// Findet das entsprechende Item im layout-Array und entfernt es ebenfalls\nconst updatedLayout=layout.filter((item,index)=>id!==item.i);setLayout(updatedLayout);}};useEffect(()=>{if(delItems.length===1){rotateAdd();}},[delItems,layout,items]);const onDrop=(layout,item,e)=>{const data=e.dataTransfer.getData(\"text/plain\");let splitted=data.split(\":\");let newW=parseInt(splitted[0]);let newH=parseInt(splitted[1]);let newId=splitted[2];let noSkip=true;let count=0;switch(newId){case\"s\":if(shipIds.current.s<maxS){shipIds.current.s+=1;count=shipIds.current.s;}else noSkip=false;break;case\"m\":if(shipIds.current.m<maxM){shipIds.current.m+=1;count=shipIds.current.m;}else noSkip=false;break;case\"l\":if(shipIds.current.l<maxL){shipIds.current.l+=1;count=shipIds.current.l;}else noSkip=false;break;case\"xl\":if(shipIds.current.xl<maxXL){shipIds.current.xl+=1;count=shipIds.current.xl;}else noSkip=false;break;default:}if(item.y>=maxCols)item.y=maxCols-1;if(noSkip){let newItem={i:\"ship-\".concat(newId,\"-\").concat(count),x:item.x,y:item.y,w:newW,h:newH,id:newId};// Find non-overlapping position\nnewItem=findNonOverlappingPosition(newItem,items);setItems([...items,newItem]);}};const onDragStop=(layout,oldItemIndex,newItem)=>{let updatedLayout=layout.map(item=>{if(item.i===newItem.i){const newPosition=findNonOverlappingPosition(newItem,layout);return{...item,...newPosition};}return item;});const uniqueLayout=updatedLayout.filter((item,index,self)=>index===self.findIndex(t=>t.i===item.i));setLayout(updatedLayout);const updatedItems=items.map(item=>{if(item.i===newItem.i){const newPosition=findNonOverlappingPosition(newItem,items);return{...item,...newPosition};}return item;});setItems(updatedItems);};/*\r\n   */ // ChatGPT generated -------\nconst isOverlapping=(item1,item2)=>{// Überprüfen, ob die IDs unterschiedlich sind, um sicherzustellen, dass wir nicht denselben Element vergleichen\nif(item1.i===item2.i)return false;// Berechnen der Grenzen für beide Elemente\nconst item1EndX=item1.x+item1.w;const item1EndY=item1.y+item1.h;const item2EndX=item2.x+item2.w;const item2EndY=item2.y+item2.h;// return !(\n//   item1EndX  <= item2.x ||\n//   item1.x >= item2EndX ||\n//   item1EndY <= item2.y ||\n//   item1.y >= item2EndY );\nreturn!(item1EndX<=item2.x-space||item1.x>=item2EndX+space||item1EndY<=item2.y-space||item1.y>=item2EndY+space);};const findNonOverlappingPosition=(newItem,layout)=>{let position={...newItem};let overlaps=true;while(overlaps){overlaps=items.some(item=>isOverlapping(position,item));if(overlaps){position.x+=1;if(position.x+position.w>maxCols){position.x=0;position.y+=1;}}if(position.y+position.h>maxRows){position.y=maxRows-position.h;overlaps=items.some(item=>isOverlapping(position,item));if(overlaps){position.x=0;position.y=0;while(overlaps){overlaps=items.some(item=>isOverlapping(position,item));if(overlaps){position.x+=1;if(position.x+position.w>maxCols){position.x=0;position.y+=1;}}}}}}return position;};function sendShips(event){// erstellt das richtige Format für weiterleitung an die anderen\nlet newItems=[];newItems=items.map((item,index)=>{let s=item.i.split(\"-\");let newID=\"2\";switch(s[1]){case\"s\":newID=\"2\";break;case\"m\":newID=\"3\";break;case\"l\":newID=\"4\";break;case\"xl\":newID=\"5\";break;default:break;}if(s[1]===\"s\"||s[1]===\"m\"){if(s[2]===\"1\")newID+=\"a\";if(s[2]===\"2\")newID+=\"b\";}return{identifier:newID,startX:item.x,startY:item.y,length:item.w>item.h?item.w:item.h,direction:item.w>item.h?\"X\":\"Y\"};});dispatch(setShips({ships:newItems}));dispatch(setAiDifficulty({aiDifficulty:difficulty.current}));navigate(\"/game\");}useEffect(()=>{const uniqueLayout=layout.filter((item,index,self)=>index===self.findIndex(t=>t.i===item.i));if(uniqueLayout.length!==layout.length){setLayout(uniqueLayout);}},[layout]);const placeShipsRandomly=()=>{let test=items.forEach(item=>rotateRemove(item.i));setItems(test);let newItems=[];shipSizes.forEach((ship,index)=>{let newItem=null;if(Math.random()<0.5)newItem={i:\"ship-\".concat(ship.id,\"-\").concat(index),x:Math.floor(Math.random()*maxCols),y:Math.floor(Math.random()*maxRows),w:ship.w,h:ship.h,id:ship.id};else newItem={i:\"ship-\".concat(ship.id,\"-\").concat(index),x:Math.floor(Math.random()*maxCols),y:Math.floor(Math.random()*maxRows),w:ship.h,h:ship.w,id:ship.id};newItem=findNonOverlappingPosition(newItem,newItems);newItems.push(newItem);});setItems(newItems);};useEffect(()=>{const checkForOverlaps=()=>{let newItems=[...items];let updated=false;newItems.forEach((item,index)=>{let newItem={...item};while(newItems.some((otherItem,otherIndex)=>otherIndex!==index&&isOverlapping(newItem,otherItem))){newItem=findNonOverlappingPosition(newItem,newItems);updated=true;}newItems[index]=newItem;});if(updated){setItems(newItems);setLayout([...layout,...newItems]);}};checkForOverlaps();},[items]);const sendDebugShips=()=>{let newShips=[{identifier:\"2a\",startX:0,startY:0,length:2,direction:\"X\"},{identifier:\"2b\",startX:8,startY:0,length:2,direction:\"X\"},{identifier:\"4\",startX:6,startY:9,length:4,direction:\"X\"},{identifier:\"5\",startX:0,startY:9,length:5,direction:\"X\"},{identifier:\"3a\",startX:5,startY:5,length:3,direction:\"Y\"},{identifier:\"3b\",startX:2,startY:2,length:3,direction:\"Y\"}];dispatch(setShips({ships:newShips}));dispatch(setAiDifficulty({aiDifficulty:difficulty.current}));navigate(\"/game\");};const swtichKiMode=(s,newDifficulty)=>{setKiMode(s);difficulty.current=newDifficulty;};return/*#__PURE__*/_jsxs(Container,{className:styles.container,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.LogoDiv}),/*#__PURE__*/_jsx(Button,{onClick:sendDebugShips,children:\"Debug Ships Button\"}),/*#__PURE__*/_jsxs(ResponsiveGridLayout,{className:styles.Grid,layouts:layouts,breakpoints:{lg:1000},cols:{lg:10,md:10,sm:10,xs:10,xxs:10}// 10 columns for each breakpoint\n,rowHeight:50// Adjust row height as needed\n,width:600// Adjust the width as needed\n,isResizable:false,isDroppable:true,onDrop:onDrop,allowOverlap:true,preventCollision:true,onDragStop:onDragStop,onDropDragOver:e=>{// rote anzeige für größe\nif(draggedItem){// Versuchen Sie, die Größe basierend auf dem gezogenen Element zu setzen\nlet[nW,nH]=draggedItem.dataset.size?draggedItem.dataset.size.split(\":\"):[null,null];const w=parseInt(nW||\"0\");const h=parseInt(nH||\"0\");// Stellen Sie sicher, dass w und h als number zurückgegeben werden\nreturn{w:isNaN(w)?0:w,// Verwenden Sie 0 als Standardwert, wenn die Konvertierung fehlschlägt\nh:isNaN(h)?0:h// Verwenden Sie 0 als Standardwert, wenn die Konvertierung fehlschlägt\n};}// Standardgröße, wenn kein Element gezogen wird\nreturn{w:3,// Neue Breite des Elements\nh:1// Neue Höhe des Elements\n};},children:[layout.map(item=>/*#__PURE__*/_jsx(\"div\",{className:item.i.startsWith(\"ship\")?\"\":styles.gridCell},item.i)),items.map(item=>{let s=item.i.split(\"-\");let newPic=mediumShip;if(item.w>item.h){switch(s[1]){case\"s\":newPic=smallShip;break;case\"m\":newPic=mediumShip;break;case\"l\":newPic=largeShip;break;case\"xl\":newPic=xlargeShip;break;default:break;}}else{switch(s[1]){case\"s\":newPic=smallShipR;break;case\"m\":newPic=mediumShipR;break;case\"l\":newPic=largeShipR;break;case\"xl\":newPic=xlargeShipR;break;default:break;}}return/*#__PURE__*/_jsxs(\"div\",{// onDoubleClick={() => rotateRemove(item.i)}\nclassName:styles.ship,children:[/*#__PURE__*/_jsx(Image,{src:newPic,className:item.w>item.h?styles.normalPic:styles.rotatedPic}),/*#__PURE__*/_jsx(Button,{variant:\"info\",className:item.w>item.h?styles.rotateButtonW:styles.rotateButtonH,onClick:()=>rotateRemove(item.i)})]},item.i);})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.gameSettings,children:[/*#__PURE__*/_jsx(Button,{className:styles.next,variant:shipSizes.length-1>=items.length?\"danger\":\"success\",onClick:sendShips,style:{fontSize:\"100px\"},disabled:shipSizes.length-1>=items.length,children:\"Start\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.kiButtons,children:[/*#__PURE__*/_jsx(Button,{className:styles.ki1,onClick:()=>swtichKiMode(\"ki1\",kiDifficulties[0]),variant:kiMode==\"ki1\"?\"primary\":\"warning\",disabled:kiMode==\"ki1\",children:\"Noob\"}),/*#__PURE__*/_jsx(Button,{className:styles.ki2,onClick:()=>swtichKiMode(\"ki2\",kiDifficulties[1]),variant:kiMode==\"ki2\"?\"primary\":\"warning\",disabled:kiMode==\"ki2\",children:\"Human\"}),/*#__PURE__*/_jsx(Button,{className:styles.ki3,onClick:()=>swtichKiMode(\"ki3\",kiDifficulties[2]),variant:kiMode==\"ki3\"?\"primary\":\"warning\",disabled:kiMode==\"ki3\",children:\"God Mode\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.Ships,children:Object.keys(shipIds.current).map(key=>{let maxVal=maxS;let shipSize=smallShipSize;let newClass=styles.s;let newPic=mediumShip;if(key===\"s\"){newPic=smallShip;}else if(key===\"m\"){maxVal=maxM;shipSize=mediumShipSize;newPic=mediumShip;newClass=styles.m;}else if(key===\"l\"){maxVal=maxL;shipSize=largeShipSize;newPic=largeShip;newClass=styles.l;}else if(key===\"xl\"){maxVal=maxXL;shipSize=xlShipSize;newPic=xlargeShip;newClass=styles.xl;}// Erstelle ein div-Element für jeden Schlüssel\nreturn/*#__PURE__*/_jsxs(\"div\",{className:newClass,children:[/*#__PURE__*/_jsx(\"a\",{children:maxVal-shipIds.current[key]!=0?\"\".concat(maxVal-shipIds.current[key],\"  left\"):\"\"}),maxVal-shipIds.current[key]===0?null:/*#__PURE__*/_jsx(\"div\",{className:shipIds.current[key]<maxVal?styles.draggableItem:styles.disabledItem,draggable:shipIds.current[key]<maxVal?true:false,unselectable:\"on\",onDragStart:e=>{e.dataTransfer.setData(\"text/plain\",shipSize);setDraggedItem(e.currentTarget);// Speichern Sie das aktuell gezogene Element\n},\"data-size\":shipSize,children:/*#__PURE__*/_jsx(Image,{src:newPic,className:styles.normalPic,draggable:shipIds.current[key]<maxVal?true:false})})]},key);})})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","styles","Container","Button","Image","Responsive","WidthProvider","useDispatch","useNavigate","setShips","setAiDifficulty","smallShip","mediumShip","largeShip","xlargeShip","smallShipR","mediumShipR","largeShipR","xlargeShipR","jsx","_jsx","jsxs","_jsxs","ResponsiveGridLayout","space","kiDifficulties","GamePrototype2","dispatch","navigate","kiMode","setKiMode","difficulty","maxRows","maxCols","gridCells","layout","setLayout","Array","from","length","_","index","i","toString","x","y","Math","floor","w","h","static","id","maxS","maxM","maxL","maxXL","draggedItem","setDraggedItem","smallShipSize","mediumShipSize","largeShipSize","xlShipSize","shipIds","s","m","l","xl","shipSizes","items","setItems","delItems","setDelItems","layouts","lg","concat","rotateAdd","newX","newY","newH","newW","newShip","findNonOverlappingPosition","rotateRemove","secondItemIndex","findIndex","item","updatedItems","splice","updatedLayout","filter","onDrop","e","data","dataTransfer","getData","splitted","split","parseInt","newId","noSkip","count","current","newItem","onDragStop","oldItemIndex","map","newPosition","uniqueLayout","self","t","isOverlapping","item1","item2","item1EndX","item1EndY","item2EndX","item2EndY","position","overlaps","some","sendShips","event","newItems","newID","identifier","startX","startY","direction","ships","aiDifficulty","placeShipsRandomly","test","forEach","ship","random","push","checkForOverlaps","updated","otherItem","otherIndex","sendDebugShips","newShips","swtichKiMode","newDifficulty","className","container","children","LogoDiv","onClick","Grid","breakpoints","cols","md","sm","xs","xxs","rowHeight","width","isResizable","isDroppable","allowOverlap","preventCollision","onDropDragOver","nW","nH","dataset","size","isNaN","startsWith","gridCell","newPic","src","normalPic","rotatedPic","variant","rotateButtonW","rotateButtonH","gameSettings","next","style","fontSize","disabled","kiButtons","ki1","ki2","ki3","Ships","Object","keys","key","maxVal","shipSize","newClass","draggableItem","disabledItem","draggable","unselectable","onDragStart","setData","currentTarget"],"sources":["C:/Users/smhof/Downloads/19.06/19.06.frontend/src/components/Game/Protoype/GamePrototype.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styles from \"./GamePrototype.module.css\";\r\nimport { Container, Button, Image } from \"react-bootstrap\";\r\nimport { Responsive, WidthProvider, Layout } from \"react-grid-layout\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"react-grid-layout/css/styles.css\";\r\nimport \"react-resizable/css/styles.css\";\r\nimport {\r\n  ShipTemplate,\r\n  setShips,\r\n  setAiDifficulty,\r\n} from \"../../reducer/TestReducer\";\r\nimport smallShip from \"../../../assets/pictures/Schiffe/StandardPNG/holes/2.png\";\r\nimport mediumShip from \"../../../assets/pictures/Schiffe/StandardPNG/holes/3.png\";\r\nimport largeShip from \"../../../assets/pictures/Schiffe/StandardPNG/holes/4.png\";\r\nimport xlargeShip from \"../../../assets/pictures/Schiffe/StandardPNG/holes/5.png\";\r\nimport smallShipR from \"../../../assets/pictures/Schiffe/StandardPNG/holes/2r.png\";\r\nimport mediumShipR from \"../../../assets/pictures/Schiffe/StandardPNG/holes/3r.png\";\r\nimport largeShipR from \"../../../assets/pictures/Schiffe/StandardPNG/holes/4r.png\";\r\nimport xlargeShipR from \"../../../assets/pictures/Schiffe/StandardPNG/holes/5r.png\";\r\nimport logoPic from \"../../../assets/pictures/cof_logo.png\";\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\n// instant place button -> search for \"Debug Ships Button\" and make it to real code\r\nconst space = 0;\r\nconst kiDifficulties = [0.25, -1, 0.9];\r\nexport default function GamePrototype2() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [kiMode, setKiMode] = useState<String>(\"ki1\");\r\n  let difficulty = useRef<number>(0.5);\r\n  // GameGrid\r\n  const maxRows: number = 10;\r\n  const maxCols: number = 10;\r\n  const gridCells: number = 100;\r\n  const [layout, setLayout] = useState<Array<Layout>>(\r\n    Array.from({ length: gridCells }, (_, index) => ({\r\n      i: index.toString(), // identifier\r\n      x: index % maxRows, //startX\r\n      y: Math.floor(index / maxCols), //startY\r\n      w: 1,\r\n      h: 1,\r\n      static: true,\r\n      id: \"\",\r\n    }))\r\n  );\r\n  // Ships\r\n  interface ShipIds {\r\n    [key: string]: number;\r\n  }\r\n\r\n  const maxS: number = 2;\r\n  const maxM: number = 2;\r\n  const maxL: number = 1;\r\n  const maxXL: number = 1;\r\n  const [draggedItem, setDraggedItem] = useState<HTMLDivElement>();\r\n  const smallShipSize = \"2:1:s\";\r\n  const mediumShipSize = \"3:1:m\";\r\n  const largeShipSize = \"4:1:l\";\r\n  const xlShipSize = \"5:1:xl\";\r\n\r\n  const shipIds = useRef<ShipIds>({ s: 0, m: 0, l: 0, xl: 0 });\r\n  // ChatGPT\r\n  const shipSizes = [\r\n    { w: 2, h: 1, id: \"s\" }, // small ships\r\n    { w: 2, h: 1, id: \"s\" },\r\n    { w: 3, h: 1, id: \"m\" }, // medium ships\r\n    { w: 3, h: 1, id: \"m\" },\r\n    { w: 4, h: 1, id: \"l\" }, // large ship\r\n    { w: 5, h: 1, id: \"xl\" }, // extra-large ship\r\n  ];\r\n  // --------\r\n  // 2 zweier, 2 dreier, 1 vierer, 1 fünfer\r\n\r\n  const [items, setItems] = useState<Array<Layout>>([]);\r\n  const [delItems, setDelItems] = useState<Array<Layout>>([]);\r\n\r\n  const layouts = { lg: layout.concat(items) };\r\n\r\n  const rotateAdd = () => {\r\n    let newX = delItems[0].x;\r\n    let newY = delItems[0].y;\r\n    let newH = delItems[0].w;\r\n    let newW = delItems[0].h;\r\n    let newShip: any = {\r\n      i: delItems[0].i,\r\n      x: newX + newW > maxCols ? maxCols - newW : newX,\r\n      y: newY + newH > maxRows ? maxRows - newH : newY,\r\n      w: newW,\r\n      h: newH,\r\n      static: false,\r\n      id: \"\",\r\n    };\r\n    newShip = findNonOverlappingPosition(newShip, items);\r\n    // Fügen Sie das Schiff zum items-Array hinzu\r\n    setItems([...items, newShip]);\r\n    setDelItems([]);\r\n  };\r\n  const rotateRemove = (id: string) => {\r\n    // Finde das zweite Item im Array\r\n    const secondItemIndex = items.findIndex((item, index) => id === item.i);\r\n    setDelItems([items[secondItemIndex]]);\r\n    if (secondItemIndex !== -1) {\r\n      // Entferne das Item aus dem items-Array\r\n      const updatedItems = [...items];\r\n      updatedItems.splice(secondItemIndex, 1);\r\n      // Aktualisiere den Zustand mit dem aktualisierten Array\r\n      setItems(updatedItems);\r\n\r\n      // Findet das entsprechende Item im layout-Array und entfernt es ebenfalls\r\n      const updatedLayout = layout.filter((item, index) => id !== item.i);\r\n      setLayout(updatedLayout);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (delItems.length === 1) {\r\n      rotateAdd();\r\n    }\r\n  }, [delItems, layout, items]);\r\n\r\n  const onDrop = (\r\n    layout: Layout[],\r\n    item: Layout,\r\n    e: React.DragEvent<HTMLDivElement>\r\n  ) => {\r\n    const data = e.dataTransfer.getData(\"text/plain\");\r\n    let splitted = data.split(\":\");\r\n    let newW: number = parseInt(splitted[0]);\r\n    let newH: number = parseInt(splitted[1]);\r\n    let newId: string = splitted[2];\r\n    let noSkip = true;\r\n    let count: number = 0;\r\n    switch (newId) {\r\n      case \"s\":\r\n        if (shipIds.current.s < maxS) {\r\n          shipIds.current.s += 1;\r\n          count = shipIds.current.s;\r\n        } else noSkip = false;\r\n        break;\r\n      case \"m\":\r\n        if (shipIds.current.m < maxM) {\r\n          shipIds.current.m += 1;\r\n          count = shipIds.current.m;\r\n        } else noSkip = false;\r\n        break;\r\n      case \"l\":\r\n        if (shipIds.current.l < maxL) {\r\n          shipIds.current.l += 1;\r\n          count = shipIds.current.l;\r\n        } else noSkip = false;\r\n        break;\r\n      case \"xl\":\r\n        if (shipIds.current.xl < maxXL) {\r\n          shipIds.current.xl += 1;\r\n          count = shipIds.current.xl;\r\n        } else noSkip = false;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    if (item.y >= maxCols) item.y = maxCols - 1;\r\n\r\n    if (noSkip) {\r\n      let newItem: any = {\r\n        i: `ship-${newId}-${count}`,\r\n        x: item.x,\r\n        y: item.y,\r\n        w: newW,\r\n        h: newH,\r\n        id: newId,\r\n      };\r\n\r\n      // Find non-overlapping position\r\n      newItem = findNonOverlappingPosition(newItem, items);\r\n\r\n      setItems([...items, newItem]);\r\n    }\r\n  };\r\n\r\n  const onDragStop = (layout: any, oldItemIndex: any, newItem: Layout) => {\r\n    let updatedLayout: any = layout.map((item: Layout) => {\r\n      if (item.i === newItem.i) {\r\n        const newPosition = findNonOverlappingPosition(newItem, layout);\r\n        return { ...item, ...newPosition };\r\n      }\r\n      return item;\r\n    });\r\n    const uniqueLayout = updatedLayout.filter(\r\n      (item: any, index: number, self: any) =>\r\n        index === self.findIndex((t: any) => t.i === item.i)\r\n    );\r\n    setLayout(updatedLayout);\r\n\r\n    const updatedItems = items.map((item) => {\r\n      if (item.i === newItem.i) {\r\n        const newPosition = findNonOverlappingPosition(newItem, items);\r\n        return { ...item, ...newPosition };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    setItems(updatedItems);\r\n  };\r\n  /*\r\n   */\r\n  // ChatGPT generated -------\r\n  const isOverlapping = (item1: Layout, item2: Layout): boolean => {\r\n    // Überprüfen, ob die IDs unterschiedlich sind, um sicherzustellen, dass wir nicht denselben Element vergleichen\r\n    if (item1.i === item2.i) return false;\r\n\r\n    // Berechnen der Grenzen für beide Elemente\r\n    const item1EndX = item1.x + item1.w;\r\n    const item1EndY = item1.y + item1.h;\r\n    const item2EndX = item2.x + item2.w;\r\n    const item2EndY = item2.y + item2.h;\r\n\r\n    // return !(\r\n    //   item1EndX  <= item2.x ||\r\n    //   item1.x >= item2EndX ||\r\n    //   item1EndY <= item2.y ||\r\n    //   item1.y >= item2EndY );\r\n    return !(\r\n      item1EndX <= item2.x - space ||\r\n      item1.x >= item2EndX + space ||\r\n      item1EndY <= item2.y - space ||\r\n      item1.y >= item2EndY + space\r\n    );\r\n  };\r\n  const findNonOverlappingPosition = (newItem: Layout, layout: Layout[]) => {\r\n    let position = { ...newItem };\r\n    let overlaps = true;\r\n\r\n    while (overlaps) {\r\n      overlaps = items.some((item) => isOverlapping(position, item));\r\n      if (overlaps) {\r\n        position.x += 1;\r\n        if (position.x + position.w > maxCols) {\r\n          position.x = 0;\r\n          position.y += 1;\r\n        }\r\n      }\r\n      if (position.y + position.h > maxRows) {\r\n        position.y = maxRows - position.h;\r\n        overlaps = items.some((item) => isOverlapping(position, item));\r\n        if (overlaps) {\r\n          position.x = 0;\r\n          position.y = 0;\r\n          while (overlaps) {\r\n            overlaps = items.some((item) => isOverlapping(position, item));\r\n            if (overlaps) {\r\n              position.x += 1;\r\n              if (position.x + position.w > maxCols) {\r\n                position.x = 0;\r\n                position.y += 1;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return position;\r\n  };\r\n  function sendShips(event: any): void {\r\n    // erstellt das richtige Format für weiterleitung an die anderen\r\n    let newItems: ShipTemplate[] = [];\r\n    newItems = items.map((item, index) => {\r\n      let s: string[] = item.i.split(\"-\");\r\n      let newID: string = \"2\";\r\n      switch (s[1]) {\r\n        case \"s\":\r\n          newID = \"2\";\r\n          break;\r\n        case \"m\":\r\n          newID = \"3\";\r\n          break;\r\n        case \"l\":\r\n          newID = \"4\";\r\n          break;\r\n        case \"xl\":\r\n          newID = \"5\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (s[1] === \"s\" || s[1] === \"m\") {\r\n        if (s[2] === \"1\") newID += \"a\";\r\n        if (s[2] === \"2\") newID += \"b\";\r\n      }\r\n\r\n      return {\r\n        identifier: newID,\r\n        startX: item.x,\r\n        startY: item.y,\r\n        length: item.w > item.h ? item.w : item.h,\r\n        direction: item.w > item.h ? \"X\" : \"Y\",\r\n      };\r\n    });\r\n    dispatch(\r\n      setShips({\r\n        ships: newItems,\r\n      })\r\n    );\r\n    dispatch(\r\n      setAiDifficulty({\r\n        aiDifficulty: difficulty.current,\r\n      })\r\n    );\r\n    navigate(\"/game\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const uniqueLayout = layout.filter(\r\n      (item, index, self) => index === self.findIndex((t) => t.i === item.i)\r\n    );\r\n\r\n    if (uniqueLayout.length !== layout.length) {\r\n      setLayout(uniqueLayout);\r\n    }\r\n  }, [layout]);\r\n\r\n  const placeShipsRandomly = () => {\r\n    let test: any = items.forEach((item) => rotateRemove(item.i));\r\n    setItems(test);\r\n\r\n    let newItems: any = [];\r\n\r\n    shipSizes.forEach((ship, index) => {\r\n      let newItem: any = null;\r\n      if (Math.random() < 0.5)\r\n        newItem = {\r\n          i: `ship-${ship.id}-${index}`,\r\n          x: Math.floor(Math.random() * maxCols),\r\n          y: Math.floor(Math.random() * maxRows),\r\n          w: ship.w,\r\n          h: ship.h,\r\n          id: ship.id,\r\n        };\r\n      else\r\n        newItem = {\r\n          i: `ship-${ship.id}-${index}`,\r\n          x: Math.floor(Math.random() * maxCols),\r\n          y: Math.floor(Math.random() * maxRows),\r\n          w: ship.h,\r\n          h: ship.w,\r\n          id: ship.id,\r\n        };\r\n\r\n      newItem = findNonOverlappingPosition(newItem, newItems);\r\n      newItems.push(newItem);\r\n    });\r\n\r\n    setItems(newItems);\r\n  };\r\n  useEffect(() => {\r\n    const checkForOverlaps = () => {\r\n      let newItems = [...items];\r\n      let updated = false;\r\n\r\n      newItems.forEach((item, index) => {\r\n        let newItem = { ...item };\r\n        while (\r\n          newItems.some(\r\n            (otherItem, otherIndex) =>\r\n              otherIndex !== index && isOverlapping(newItem, otherItem)\r\n          )\r\n        ) {\r\n          newItem = findNonOverlappingPosition(newItem, newItems);\r\n          updated = true;\r\n        }\r\n        newItems[index] = newItem;\r\n      });\r\n\r\n      if (updated) {\r\n        setItems(newItems);\r\n        setLayout([...layout, ...newItems]);\r\n      }\r\n    };\r\n\r\n    checkForOverlaps();\r\n  }, [items]);\r\n\r\n  const sendDebugShips = () => {\r\n    let newShips = [\r\n      { identifier: \"2a\", startX: 0, startY: 0, length: 2, direction: \"X\" },\r\n      { identifier: \"2b\", startX: 8, startY: 0, length: 2, direction: \"X\" },\r\n      { identifier: \"4\", startX: 6, startY: 9, length: 4, direction: \"X\" },\r\n      { identifier: \"5\", startX: 0, startY: 9, length: 5, direction: \"X\" },\r\n      { identifier: \"3a\", startX: 5, startY: 5, length: 3, direction: \"Y\" },\r\n      { identifier: \"3b\", startX: 2, startY: 2, length: 3, direction: \"Y\" },\r\n    ];\r\n    dispatch(\r\n      setShips({\r\n        ships: newShips,\r\n      })\r\n    );\r\n    dispatch(\r\n      setAiDifficulty({\r\n        aiDifficulty: difficulty.current,\r\n      })\r\n    );\r\n    navigate(\"/game\");\r\n  };\r\n  const swtichKiMode = (s: string, newDifficulty: number) => {\r\n    setKiMode(s);\r\n    difficulty.current = newDifficulty;\r\n  };\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <div className={styles.LogoDiv}>\r\n      </div>\r\n      <Button onClick={sendDebugShips}>Debug Ships Button</Button>\r\n      {/* einige Teile mit ChatGPT */}\r\n      <ResponsiveGridLayout\r\n        className={styles.Grid}\r\n        layouts={layouts}\r\n        breakpoints={{ lg: 1000 }}\r\n        cols={{ lg: 10, md: 10, sm: 10, xs: 10, xxs: 10 }} // 10 columns for each breakpoint\r\n        rowHeight={50} // Adjust row height as needed\r\n        width={600} // Adjust the width as needed\r\n        isResizable={false}\r\n        isDroppable={true}\r\n        onDrop={onDrop}\r\n        allowOverlap={true}\r\n        preventCollision={true}\r\n        onDragStop={onDragStop}\r\n        onDropDragOver={(e) => {\r\n          // rote anzeige für größe\r\n          if (draggedItem) {\r\n            // Versuchen Sie, die Größe basierend auf dem gezogenen Element zu setzen\r\n            let [nW, nH] = draggedItem.dataset.size\r\n              ? draggedItem.dataset.size.split(\":\")\r\n              : [null, null];\r\n            const w = parseInt(nW || \"0\");\r\n            const h = parseInt(nH || \"0\");\r\n            // Stellen Sie sicher, dass w und h als number zurückgegeben werden\r\n            return {\r\n              w: isNaN(w) ? 0 : w, // Verwenden Sie 0 als Standardwert, wenn die Konvertierung fehlschlägt\r\n              h: isNaN(h) ? 0 : h, // Verwenden Sie 0 als Standardwert, wenn die Konvertierung fehlschlägt\r\n            };\r\n          }\r\n          // Standardgröße, wenn kein Element gezogen wird\r\n          return {\r\n            w: 3, // Neue Breite des Elements\r\n            h: 1, // Neue Höhe des Elements\r\n          };\r\n        }}\r\n      >\r\n        {layout.map((item) => (\r\n          <div\r\n            key={item.i}\r\n            className={item.i.startsWith(\"ship\") ? \"\" : styles.gridCell}\r\n          >\r\n            {/* {item.i + \" \" + item.x + \" \" + item.y} */}\r\n          </div>\r\n        ))}\r\n        {items.map((item) => {\r\n          let s: string[] = item.i.split(\"-\");\r\n          let newPic: string = mediumShip;\r\n          if (item.w > item.h) {\r\n            switch (s[1]) {\r\n              case \"s\":\r\n                newPic = smallShip;\r\n                break;\r\n              case \"m\":\r\n                newPic = mediumShip;\r\n                break;\r\n              case \"l\":\r\n                newPic = largeShip;\r\n                break;\r\n              case \"xl\":\r\n                newPic = xlargeShip;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          } else {\r\n            switch (s[1]) {\r\n              case \"s\":\r\n                newPic = smallShipR;\r\n                break;\r\n              case \"m\":\r\n                newPic = mediumShipR;\r\n                break;\r\n              case \"l\":\r\n                newPic = largeShipR;\r\n                break;\r\n              case \"xl\":\r\n                newPic = xlargeShipR;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n          return (\r\n            <div\r\n              key={item.i}\r\n              // onDoubleClick={() => rotateRemove(item.i)}\r\n              className={styles.ship}\r\n            >\r\n              <Image\r\n                src={newPic}\r\n                className={\r\n                  item.w > item.h ? styles.normalPic : styles.rotatedPic\r\n                }\r\n              />\r\n              <Button\r\n                variant=\"info\"\r\n                className={\r\n                  item.w > item.h ? styles.rotateButtonW : styles.rotateButtonH\r\n                }\r\n                onClick={() => rotateRemove(item.i)}\r\n              ></Button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ResponsiveGridLayout>\r\n        {/* Settings and start button */}\r\n      <div className={styles.gameSettings}>\r\n        <Button\r\n          className={styles.next}\r\n          variant={shipSizes.length - 1 >= items.length ? \"danger\" : \"success\"}\r\n          onClick={sendShips}\r\n          style={{ fontSize: \"100px\" }}\r\n          disabled={shipSizes.length - 1 >= items.length}\r\n        >\r\n          Start\r\n        </Button>\r\n        <div className={styles.kiButtons}>\r\n          <Button\r\n            className={styles.ki1}\r\n            onClick={() => swtichKiMode(\"ki1\", kiDifficulties[0])}\r\n            variant={kiMode == \"ki1\" ? \"primary\" : \"warning\"}\r\n            disabled={kiMode == \"ki1\"}\r\n          >\r\n            Noob\r\n          </Button>\r\n          <Button\r\n            className={styles.ki2}\r\n            onClick={() => swtichKiMode(\"ki2\", kiDifficulties[1])}\r\n            variant={kiMode == \"ki2\" ? \"primary\" : \"warning\"}\r\n            disabled={kiMode == \"ki2\"}\r\n          >\r\n            Human\r\n          </Button>\r\n          <Button\r\n            className={styles.ki3}\r\n            onClick={() => swtichKiMode(\"ki3\", kiDifficulties[2])}\r\n            variant={kiMode == \"ki3\" ? \"primary\" : \"warning\"}\r\n            disabled={kiMode == \"ki3\"}\r\n          >\r\n            God Mode\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.Ships}>\r\n        {/* <Button onClick={placeShipsRandomly} disabled={timerRunning}>\r\n          Place Ships Randomly\r\n        </Button> */}\r\n        {/* Schiffs anzeige anhand des Größentags  */}\r\n        {Object.keys(shipIds.current).map((key) => {\r\n          let maxVal = maxS;\r\n          let shipSize = smallShipSize;\r\n          let newClass: string = styles.s;\r\n          let newPic: string = mediumShip;\r\n          if (key === \"s\") {\r\n            newPic = smallShip;\r\n          } else if (key === \"m\") {\r\n            maxVal = maxM;\r\n            shipSize = mediumShipSize;\r\n            newPic = mediumShip;\r\n            newClass = styles.m;\r\n          } else if (key === \"l\") {\r\n            maxVal = maxL;\r\n            shipSize = largeShipSize;\r\n            newPic = largeShip;\r\n            newClass = styles.l;\r\n          } else if (key === \"xl\") {\r\n            maxVal = maxXL;\r\n            shipSize = xlShipSize;\r\n            newPic = xlargeShip;\r\n            newClass = styles.xl;\r\n          }\r\n          // Erstelle ein div-Element für jeden Schlüssel\r\n          return (\r\n            <div key={key} className={newClass}>\r\n              <a>\r\n                {maxVal - shipIds.current[key] != 0\r\n                  ? `${maxVal - shipIds.current[key]}  left`\r\n                  : \"\"}\r\n              </a>\r\n              {maxVal - shipIds.current[key] === 0 ? null : (\r\n                <div\r\n                  className={\r\n                    shipIds.current[key] < maxVal\r\n                      ? styles.draggableItem\r\n                      : styles.disabledItem\r\n                  }\r\n                  draggable={shipIds.current[key] < maxVal ? true : false}\r\n                  unselectable=\"on\"\r\n                  onDragStart={(e) => {\r\n                    e.dataTransfer.setData(\"text/plain\", shipSize);\r\n                    setDraggedItem(e.currentTarget); // Speichern Sie das aktuell gezogene Element\r\n                  }}\r\n                  data-size={shipSize}\r\n                >\r\n                  <Image\r\n                    src={newPic}\r\n                    className={styles.normalPic}\r\n                    draggable={shipIds.current[key] < maxVal ? true : false}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}